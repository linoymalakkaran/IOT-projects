{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string",
            "metadata": {
                "description": "Environment name prefix"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Primary deployment location"
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Virtual Network"
            }
        }
    },
    "variables": {
        "subnetNames": {
            "iotDevices": "iot-devices",
            "gatewaySubnet": "gateway-subnet",
            "appSubnet": "app-subnet",
            "dataSubnet": "data-subnet"
        },
        "bastionName": "[concat(parameters('environmentName'), '-bastion')]",
        "bastionPipName": "[concat(parameters('environmentName'), '-bastion-pip')]",
        "appGatewayName": "[concat(parameters('environmentName'), '-appgw')]",
        "appGatewayPipName": "[concat(parameters('environmentName'), '-appgw-pip')]",
        "ddosProtectionPlanName": "[concat(parameters('environmentName'), '-ddos-plan')]",
        "firewallName": "[concat(parameters('environmentName'), '-firewall')]",
        "firewallPipName": "[concat(parameters('environmentName'), '-firewall-pip')]",
        "routeTableName": "[concat(parameters('environmentName'), '-route-table')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2021-03-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHTTPSInbound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowGatewayManager",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65535",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4096,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2021-03-01",
            "name": "[variables('routeTableName')]",
            "location": "[parameters('location')]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "ToFirewall",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.4.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/ddosProtectionPlans",
            "apiVersion": "2021-03-01",
            "name": "[variables('ddosProtectionPlanName')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2021-03-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
                "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "ddosProtectionPlan": {
                    "id": "[resourceId('Microsoft.Network/ddosProtectionPlans', variables('ddosProtectionPlanName'))]"
                },
                "enableDdosProtection": true,
                "subnets": [
                    {
                        "name": "[variables('subnetNames').iotDevices]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.EventHub"
                                },
                                {
                                    "service": "Microsoft.Storage"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('subnetNames').gatewaySubnet]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.EventHub"
                                },
                                {
                                    "service": "Microsoft.Storage"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('subnetNames').appSubnet]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web"
                                },
                                {
                                    "service": "Microsoft.Sql"
                                },
                                {
                                    "service": "Microsoft.EventHub"
                                },
                                {
                                    "service": "Microsoft.Storage"
                                },
                                {
                                    "service": "Microsoft.AzureCosmosDB"
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('subnetNames').dataSubnet]",
                        "properties": {
                            "addressPrefix": "10.0.3.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Sql"
                                },
                                {
                                    "service": "Microsoft.Storage"
                                },
                                {
                                    "service": "Microsoft.AzureCosmosDB"
                                }
                            ]
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "10.0.4.0/26"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.0.5.0/27"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-03-01",
            "name": "[variables('bastionPipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2021-03-01",
            "name": "[variables('bastionName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPipName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-03-01",
            "name": "[variables('firewallPipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2021-03-01",
            "name": "[variables('firewallName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('firewallPipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'AzureFirewallSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('firewallPipName'))]"
                            }
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "AllowWeb",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowAzureWebsites",
                                    "protocols": [
                                        {
                                            "port": 443,
                                            "protocolType": "Https"
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.azure-devices.net",
                                        "*.azure-api.net",
                                        "*.blob.core.windows.net",
                                        "*.servicebus.windows.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.0.0.0/16"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "AllowNetworkRules",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowIoTHub",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "10.0.0.0/24",
                                        "10.0.1.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "AzureIoTHub"
                                    ],
                                    "destinationPorts": [
                                        "8883",
                                        "443"
                                    ]
                                },
                                {
                                    "name": "AllowEventHub",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "10.0.0.0/16"
                                    ],
                                    "destinationAddresses": [
                                        "EventHub"
                                    ],
                                    "destinationPorts": [
                                        "5671",
                                        "5672",
                                        "443"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2021-03-01",
            "name": "[variables('appGatewayPipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2021-03-01",
            "name": "[variables('appGatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayPipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2",
                    "capacity": 2
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('subnetNames').gatewaySubnet)]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayPipName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_443",
                        "properties": {
                            "port": 443
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "defaultBackendPool",
                        "properties": {}
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "defaultHttpSettings",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 30,
                            "pickHostNameFromBackendAddress": true,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/probes/defaultProbe')]"
                            }
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "defaultListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/frontendPorts/port_443')]"
                            },
                            "protocol": "Https",
                            "sslCertificate": null,
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "defaultRule",
                        "properties": {
                            "ruleType": "Basic",
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/httpListeners/defaultListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/backendAddressPools/defaultBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('appGatewayName')), '/backendHttpSettingsCollection/defaultHttpSettings')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "defaultProbe",
                        "properties": {
                            "protocol": "Https",
                            "path": "/",
                            "interval": 30,
                            "timeout": 30,
                            "unhealthyThreshold": 3,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {
                                "statusCodes": [
                                    "200-399"
                                ]
                            }
                        }
                    }
                ],
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.2",
                    "disabledRuleGroups": [],
                    "requestBodyCheck": true,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "enableHttp2": true,
                "autoscaleConfiguration": {
                    "minCapacity": 2,
                    "maxCapacity": 10
                }
            }
        }
    ],
    "outputs": {
        "vnetId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        },
        "appGatewayPublicIp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayPipName'))).ipAddress]"
        },
        "firewallPrivateIp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', variables('firewallName'))).ipConfigurations[0].properties.privateIPAddress]"
        }
    }
}